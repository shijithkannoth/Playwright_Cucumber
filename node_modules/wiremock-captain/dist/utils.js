"use strict";
// Copyright (c) WarnerMedia Direct, LLC. All rights reserved. Licensed under the MIT license.
// See the LICENSE file for license information.
Object.defineProperty(exports, "__esModule", { value: true });
exports.getWebhookDelayBody = exports.getWebhookBody = exports.filterRequest = void 0;
const externalTypes_1 = require("./types/externalTypes");
function filterRequest(method, endpointUrl, request) {
    return request.request.method === method && request.request.url === endpointUrl;
}
exports.filterRequest = filterRequest;
function getWebhookBody(body) {
    switch (body.type) {
        case 'JSON':
            return JSON.stringify(body.data);
        case 'String':
            return body.data;
    }
}
exports.getWebhookBody = getWebhookBody;
function getWebhookDelayBody(delay) {
    switch (delay.type) {
        case externalTypes_1.DelayType.FIXED:
            return { type: 'fixed', milliseconds: delay.constantDelay };
        case externalTypes_1.DelayType.LOG_NORMAL:
            return { type: 'lognormal', median: delay.median, sigma: delay.sigma };
        case externalTypes_1.DelayType.UNIFORM:
            return { type: 'uniform', lower: delay.lower, upper: delay.upper };
        default:
            throw new Error('unsupported webhook delay type');
    }
}
exports.getWebhookDelayBody = getWebhookDelayBody;
